
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.0
 * Query Engine version: c0aafc03b8ef6cdced8654b9a817999e02457d6a
 */
Prisma.prismaVersion = {
  client: "6.17.0",
  engine: "c0aafc03b8ef6cdced8654b9a817999e02457d6a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  role: 'role',
  createdAt: 'createdAt',
  updateAt: 'updateAt'
};

exports.Prisma.FoodScalarFieldEnum = {
  id: 'id',
  name: 'name',
  calories: 'calories',
  protein: 'protein',
  fat: 'fat',
  carbohydrates: 'carbohydrates',
  fibre: 'fibre',
  sugar: 'sugar',
  createdAt: 'createdAt',
  updateAt: 'updateAt',
  categoryId: 'categoryId',
  mealId: 'mealId'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updateAt: 'updateAt'
};

exports.Prisma.ServingUnitScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updateAt: 'updateAt'
};

exports.Prisma.FoodServingUnitScalarFieldEnum = {
  id: 'id',
  foodId: 'foodId',
  servingUnitId: 'servingUnitId',
  grams: 'grams'
};

exports.Prisma.MealScalarFieldEnum = {
  id: 'id',
  dateTime: 'dateTime',
  userId: 'userId',
  createdAt: 'createdAt',
  updateAt: 'updateAt'
};

exports.Prisma.MealFoodScalarFieldEnum = {
  id: 'id',
  foodId: 'foodId',
  mealId: 'mealId',
  servingUnitId: 'servingUnitId',
  amount: 'amount'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  USER: 'USER',
  ADMIN: 'ADMIN'
};

exports.Prisma.ModelName = {
  User: 'User',
  Food: 'Food',
  Category: 'Category',
  ServingUnit: 'ServingUnit',
  FoodServingUnit: 'FoodServingUnit',
  Meal: 'Meal',
  MealFood: 'MealFood'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\bened\\Desktop\\Projects\\enterprise-app\\enterprise-app\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\bened\\Desktop\\Projects\\enterprise-app\\enterprise-app\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../.env",
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.17.0",
  "engineVersion": "c0aafc03b8ef6cdced8654b9a817999e02457d6a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id        Int      @id @default(autoincrement())\n  name      String\n  email     String   @unique\n  password  String\n  role      Role\n  createdAt DateTime @default(now())\n  updateAt  DateTime @updatedAt\n  meal      Meal[]\n}\n\nmodel Food {\n  id              Int               @id @default(autoincrement())\n  name            String            @unique\n  calories        Float?\n  protein         Float?\n  fat             Float?\n  carbohydrates   Float?\n  fibre           Float?\n  sugar           Float?\n  createdAt       DateTime          @default(now())\n  updateAt        DateTime          @updatedAt\n  categoryId      Int?\n  mealId          Int?\n  meal            Meal?             @relation(fields: [mealId], references: [id])\n  category        Category?         @relation(fields: [categoryId], references: [id])\n  FoodServingUnit FoodServingUnit[]\n  mealFood        MealFood[]\n}\n\nmodel Category {\n  id        Int      @id @default(autoincrement())\n  name      String   @unique\n  createdAt DateTime @default(now())\n  updateAt  DateTime @updatedAt\n  foods     Food[]\n}\n\nmodel ServingUnit {\n  id              Int               @id @default(autoincrement())\n  name            String            @unique\n  createdAt       DateTime          @default(now())\n  updateAt        DateTime          @updatedAt\n  foodServingUnit FoodServingUnit[]\n  mealFood        MealFood[]\n}\n\nmodel FoodServingUnit {\n  id            Int         @id @default(autoincrement())\n  foodId        Int\n  servingUnitId Int\n  grams         Float?\n  servingUnit   ServingUnit @relation(fields: [servingUnitId], references: [id])\n  food          Food        @relation(fields: [foodId], references: [id])\n}\n\nmodel Meal {\n  id        Int        @id @default(autoincrement())\n  dateTime  DateTime\n  userId    Int\n  createdAt DateTime   @default(now())\n  updateAt  DateTime   @updatedAt\n  foods     Food[]\n  user      User       @relation(fields: [userId], references: [id])\n  mealFood  MealFood[]\n}\n\nmodel MealFood {\n  id            Int         @id @default(autoincrement())\n  foodId        Int\n  mealId        Int\n  servingUnitId Int\n  amount        Float\n  servingUnit   ServingUnit @relation(fields: [servingUnitId], references: [id])\n  meal          Meal        @relation(fields: [mealId], references: [id])\n  food          Food        @relation(fields: [foodId], references: [id])\n}\n\nenum Role {\n  USER\n  ADMIN\n}\n",
  "inlineSchemaHash": "7337c0059519161219bea60e717e3065de640862ffc624239b6baa541ab4cbb8",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updateAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"meal\",\"kind\":\"object\",\"type\":\"Meal\",\"relationName\":\"MealToUser\"}],\"dbName\":null},\"Food\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"calories\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"protein\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"fat\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"carbohydrates\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"fibre\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"sugar\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updateAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mealId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"meal\",\"kind\":\"object\",\"type\":\"Meal\",\"relationName\":\"FoodToMeal\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToFood\"},{\"name\":\"FoodServingUnit\",\"kind\":\"object\",\"type\":\"FoodServingUnit\",\"relationName\":\"FoodToFoodServingUnit\"},{\"name\":\"mealFood\",\"kind\":\"object\",\"type\":\"MealFood\",\"relationName\":\"FoodToMealFood\"}],\"dbName\":null},\"Category\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updateAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"foods\",\"kind\":\"object\",\"type\":\"Food\",\"relationName\":\"CategoryToFood\"}],\"dbName\":null},\"ServingUnit\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updateAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"foodServingUnit\",\"kind\":\"object\",\"type\":\"FoodServingUnit\",\"relationName\":\"FoodServingUnitToServingUnit\"},{\"name\":\"mealFood\",\"kind\":\"object\",\"type\":\"MealFood\",\"relationName\":\"MealFoodToServingUnit\"}],\"dbName\":null},\"FoodServingUnit\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"foodId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"servingUnitId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"grams\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"servingUnit\",\"kind\":\"object\",\"type\":\"ServingUnit\",\"relationName\":\"FoodServingUnitToServingUnit\"},{\"name\":\"food\",\"kind\":\"object\",\"type\":\"Food\",\"relationName\":\"FoodToFoodServingUnit\"}],\"dbName\":null},\"Meal\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dateTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updateAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"foods\",\"kind\":\"object\",\"type\":\"Food\",\"relationName\":\"FoodToMeal\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MealToUser\"},{\"name\":\"mealFood\",\"kind\":\"object\",\"type\":\"MealFood\",\"relationName\":\"MealToMealFood\"}],\"dbName\":null},\"MealFood\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"foodId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mealId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"servingUnitId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"servingUnit\",\"kind\":\"object\",\"type\":\"ServingUnit\",\"relationName\":\"MealFoodToServingUnit\"},{\"name\":\"meal\",\"kind\":\"object\",\"type\":\"Meal\",\"relationName\":\"MealToMealFood\"},{\"name\":\"food\",\"kind\":\"object\",\"type\":\"Food\",\"relationName\":\"FoodToMealFood\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

